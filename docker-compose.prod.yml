x-logging: &default-logging
  options:
    max-size: "10m"
    max-file: "3"
  driver: json-file

services:
  db:
    image: postgres:15-alpine
    container_name: forson_db
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: forson_business_suite
      POSTGRES_USER: ${DB_USER}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging: *default-logging

  meilisearch:
    image: getmeili/meilisearch:v1.3.5
    container_name: forson_meilisearch
    restart: unless-stopped
    environment:
      MEILI_MASTER_KEY: ${MEILISEARCH_MASTER_KEY}
      MEILI_NO_ANALYTICS: "true"
      MEILI_ENV: production
    volumes:
      - meili_data:/meili_data
    ports:
      - "7700:7700"
    logging: *default-logging

  backend:
    image: ${DOCKER_REGISTRY:-kentonel}/forson-backend:${TAG:-latest}
    container_name: forson_backend
    restart: unless-stopped
    depends_on:
      - db
      - meilisearch
    env_file: .env
    environment:
      NODE_ENV: production
    ports:
      - "3001:3001"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--spider", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging: *default-logging

  frontend:
    image: ${DOCKER_REGISTRY:-kentonel}/forson-frontend:${TAG:-latest}
    container_name: forson_frontend
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "8090:80"
    volumes:
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging: *default-logging

  backup:
    image: postgres:15-alpine
    container_name: forson_backup
    restart: unless-stopped
    depends_on:
      - db
    volumes:
      - backup_data:/backups
      - ./backup:/docker-entrypoint-initdb.d:ro
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: backup_manager
      POSTGRES_USER: ${DB_USER}
      DB_HOST: db
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      BACKUP_PATH: /backups
      BACKUP_RETENTION_DAYS: ${BACKUP_RETENTION_DAYS:-7}
    command: >
      /bin/sh -c "
      while ! pg_isready -h db -U ${DB_USER}; do
        echo 'Waiting for main database to be ready...'
        sleep 2
      done;
      /docker-entrypoint-initdb.d/backup.sh
      "
    healthcheck:
      test: ["CMD", "test", "-d", "/backups"]
      interval: 1h
      timeout: 10s
      retries: 3
    logging: *default-logging

volumes:
  postgres_data:
    name: forson_postgres_data
  meili_data:
    name: forson_meili_data
  backup_data:
    name: forson_backup_data

networks:
  default:
    name: forson_network
