# Define the services (containers) for your application
services:
  
  # --- Database Service ---
  db:
    image: postgres:15-alpine 
    container_name: forson_db
    restart: always
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: forson_business_suite
    volumes:
      - postgres_data:/var/lib/postgresql/data 
    ports:
      - "5432:5432"

  # --- Backend API Service ---
  backend:
    container_name: forson_backend
    image: kentonel/forson-backend:latest 
    restart: always
    depends_on:
      - db 
    ports:
      - "3001:3001"
    env_file:
      - ./packages/api/.env.production 

  # --- Frontend Service ---
  frontend:
    container_name: forson_frontend
    image: kentonel/forson-frontend:latest
    restart: always
    depends_on:
      - backend 
    ports:
      - "8090:80"

  # --- NEW: Backup Service ---
  backup:
    image: postgres:15-alpine # Use the same postgres image for pg_dump
    container_name: forson_backup
    restart: always
    depends_on:
      - db
    volumes:
      - ./backups:/backups # Mount the local backups folder into the container
      - ./backup:/docker-entrypoint-initdb.d # Mount the script directory
    environment:
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - BACKUP_PATH=/backups
      - BACKUP_RETENTION_DAYS=${BACKUP_RETENTION_DAYS:-7} # Default to 7 days if not set
    # This command runs the backup script every 24 hours (86400 seconds)
    command: >
      bash -c "while true; do
        /docker-entrypoint-initdb.d/backup.sh;
        sleep 86400;
      done"
    env_file:
      - ./packages/api/.env.production

# Define a named volume to persist the PostgreSQL data
volumes:
  postgres_data:
