server {
    listen 80;
    listen [::]:80;
    server_name localhost;

    # Use Docker embedded DNS and re-resolve periodically
    resolver 127.0.0.11 valid=10s ipv6=off;
    resolver_timeout 5s;

    # Defer DNS resolution to request time (avoids startup failures)
    set $api_upstream http://backend:3001;
    set $meili_upstream http://meilisearch:7700;

    # Health check endpoint
    location /health {
        access_log off;
        return 200 'healthy\n';
    }

    location / {
        root /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
        expires 30d;
    }

    # API proxy
    location /api {
        proxy_pass $api_upstream;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 180s;
        proxy_read_timeout 180s;
    }

    # Meilisearch proxy (if needed)
    location /search {
        proxy_pass $meili_upstream;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Error pages
    error_page 404 /404.html;
    location = /404.html {
        root /usr/share/nginx/html;
        internal;
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
}
